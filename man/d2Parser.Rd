% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d2Parser.R
\name{d2Parser}
\alias{d2Parser}
\title{General purpose parsing function for different formats of DHIS2 data}
\usage{
d2Parser(filename, type, base.url, username, password, organisationUnit,
  dataElementIdScheme, orgUnitIdScheme, idScheme)
}
\arguments{
\item{filename}{Location of the payload to be imported. Should be a valid DHIS2 import file}

\item{type}{Type of the file. Should be either xml, json or csv}

\item{base.url}{Location of the server}

\item{username}{Server username}

\item{password}{Server password}

\item{organisationUnit}{Organisation unit UID of the operating unit}

\item{dataElementIdScheme}{Should be one of either code, name, shortName or id. If this paramater is "id", 
then the Data elements are assumed to be already specififed as UIDs.}

\item{orgUnitIdScheme}{Should be one of either code, name, shortName or id. If this paramater is "id", 
then the organisation units are assumed to be already specififed as UIDs}

\item{idScheme}{Remapping scheme for category option combos}
}
\value{
Returns a data frame of at least "dataElement","period","orgUnit","categoryOptionCombo","attributeOptionCombo","value"
}
\description{
d2Parser will parse a compliant DHIS2 XML,JSON or CSV file and transform it into a standard data
frame which can be used in subsequent DATIM validation routines
}
\note{
function(filename="/home/me/foo.xml",type="xml",base.url="https://www.datim.org/",
username="admin",password="district",organisationUnit="Ab12345678",dataElementIdScheme="code",orgUnitIdScheme="code",idScheme="id")
Note that all values will be returned as characters.
}

